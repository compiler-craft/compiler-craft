Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | PRINT expr ';'
    7     | VAR '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | IF '(' expr ')' stmt
   10     | IF '(' expr ')' stmt ELSE stmt
   11     | '{' stmt_list '}'
   12     | error ';'
   13     | error '}'

   14 stmt_list: stmt
   15          | stmt_list stmt

   16 expr: INT
   17     | VAR
   18     | '-' expr
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '<' expr
   24     | expr '>' expr
   25     | expr GE expr
   26     | expr LE expr
   27     | expr NE expr
   28     | expr EQ expr
   29     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 29
')' (41) 8 9 10 29
'*' (42) 21
'+' (43) 19
'-' (45) 18 20
'/' (47) 22
';' (59) 4 5 6 7 12
'<' (60) 23
'=' (61) 7
'>' (62) 24
'{' (123) 11
'}' (125) 11 13
error (256) 12 13
INT (258) 16
VAR (259) 7 17
WHILE (260) 8
IF (261) 9 10
PRINT (262) 6
IFX (263)
ELSE (264) 10
GE (265) 25
LE (266) 26
EQ (267) 28
NE (268) 27
UMINUS (269)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
function (29)
    on left: 2 3, on right: 1 2
stmt (30)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 8 9 10 14 15
stmt_list (31)
    on left: 14 15, on right: 11 15
expr (32)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 5
    6 7 8 9 10 18 19 20 21 22 23 24 25 26 27 28 29


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13

    $end  reduce using rule 1 (program)

    stmt  go to state 14
    expr  go to state 15


State 3

    0 $accept: program $end .

    $default  accept


State 4

   12 stmt: error . ';'
   13     | error . '}'

    ';'  shift, and go to state 16
    '}'  shift, and go to state 17


State 5

   16 expr: INT .

    $default  reduce using rule 16 (expr)


State 6

    7 stmt: VAR . '=' expr ';'
   17 expr: VAR .

    '='  shift, and go to state 18

    $default  reduce using rule 17 (expr)


State 7

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 19


State 8

    9 stmt: IF . '(' expr ')' stmt
   10     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 20


State 9

    6 stmt: PRINT . expr ';'

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 22


State 10

   18 expr: '-' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 23


State 11

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 12

   29 expr: '(' . expr ')'

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 24


State 13

   11 stmt: '{' . stmt_list '}'

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13

    stmt       go to state 25
    stmt_list  go to state 26
    expr       go to state 15


State 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 15

    5 stmt: expr . ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ';'  shift, and go to state 37


State 16

   12 stmt: error ';' .

    $default  reduce using rule 12 (stmt)


State 17

   13 stmt: error '}' .

    $default  reduce using rule 13 (stmt)


State 18

    7 stmt: VAR '=' . expr ';'

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 38


State 19

    8 stmt: WHILE '(' . expr ')' stmt

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 39


State 20

    9 stmt: IF '(' . expr ')' stmt
   10     | IF '(' . expr ')' stmt ELSE stmt

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 40


State 21

   17 expr: VAR .

    $default  reduce using rule 17 (expr)


State 22

    6 stmt: PRINT expr . ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ';'  shift, and go to state 41


State 23

   18 expr: '-' expr .
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 18 (expr)


State 24

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   29     | '(' expr . ')'

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 42


State 25

   14 stmt_list: stmt .

    $default  reduce using rule 14 (stmt_list)


State 26

   11 stmt: '{' stmt_list . '}'
   15 stmt_list: stmt_list . stmt

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13
    '}'    shift, and go to state 43

    stmt  go to state 44
    expr  go to state 15


State 27

   25 expr: expr GE . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 45


State 28

   26 expr: expr LE . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 46


State 29

   28 expr: expr EQ . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 47


State 30

   27 expr: expr NE . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 48


State 31

   24 expr: expr '>' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 49


State 32

   23 expr: expr '<' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 50


State 33

   19 expr: expr '+' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 51


State 34

   20 expr: expr '-' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 52


State 35

   21 expr: expr '*' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 53


State 36

   22 expr: expr '/' . expr

    INT  shift, and go to state 5
    VAR  shift, and go to state 21
    '-'  shift, and go to state 10
    '('  shift, and go to state 12

    expr  go to state 54


State 37

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 38

    7 stmt: VAR '=' expr . ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ';'  shift, and go to state 55


State 39

    8 stmt: WHILE '(' expr . ')' stmt
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 56


State 40

    9 stmt: IF '(' expr . ')' stmt
   10     | IF '(' expr . ')' stmt ELSE stmt
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    GE   shift, and go to state 27
    LE   shift, and go to state 28
    EQ   shift, and go to state 29
    NE   shift, and go to state 30
    '>'  shift, and go to state 31
    '<'  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 57


State 41

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


State 42

   29 expr: '(' expr ')' .

    $default  reduce using rule 29 (expr)


State 43

   11 stmt: '{' stmt_list '}' .

    $default  reduce using rule 11 (stmt)


State 44

   15 stmt_list: stmt_list stmt .

    $default  reduce using rule 15 (stmt_list)


State 45

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   25     | expr GE expr .
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 25 (expr)


State 46

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   26     | expr LE expr .
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 26 (expr)


State 47

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr
   28     | expr EQ expr .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 28 (expr)


State 48

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   27     | expr NE expr .
   28     | expr . EQ expr

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 27 (expr)


State 49

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   24     | expr '>' expr .
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 24 (expr)


State 50

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   23     | expr '<' expr .
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 23 (expr)


State 51

   19 expr: expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 19 (expr)


State 52

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 20 (expr)


State 53

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 21 (expr)


State 54

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '<' expr
   24     | expr . '>' expr
   25     | expr . GE expr
   26     | expr . LE expr
   27     | expr . NE expr
   28     | expr . EQ expr

    $default  reduce using rule 22 (expr)


State 55

    7 stmt: VAR '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 56

    8 stmt: WHILE '(' expr ')' . stmt

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 58
    expr  go to state 15


State 57

    9 stmt: IF '(' expr ')' . stmt
   10     | IF '(' expr ')' . stmt ELSE stmt

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 59
    expr  go to state 15


State 58

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 59

    9 stmt: IF '(' expr ')' stmt .
   10     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 60

    $default  reduce using rule 9 (stmt)


State 60

   10 stmt: IF '(' expr ')' stmt ELSE . stmt

    error  shift, and go to state 4
    INT    shift, and go to state 5
    VAR    shift, and go to state 6
    WHILE  shift, and go to state 7
    IF     shift, and go to state 8
    PRINT  shift, and go to state 9
    '-'    shift, and go to state 10
    ';'    shift, and go to state 11
    '('    shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 61
    expr  go to state 15


State 61

   10 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
